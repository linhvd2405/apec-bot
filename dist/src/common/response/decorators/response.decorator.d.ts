import { HttpStatus } from '@nestjs/common';
import { ENUM_PAGINATION_TYPE } from 'src/common/pagination/constants/pagination.enum.constant';
import { IResponseDoc, IResponseOptions, IResponseDocs, IResponsePagingOptions, IResponseExcelOptions } from 'src/common/response/interfaces/response.interface';
export declare function ResponseDoc<T>(document: IResponseDoc): any;
export declare function ResponseDocOneOf<T>(httpStatus: HttpStatus, ...documents: IResponseDocs[]): any;
export declare function ResponseDocAnyOf<T>(httpStatus: HttpStatus, ...documents: IResponseDocs[]): any;
export declare function ResponseDocAllOf<T>(httpStatus: HttpStatus, ...documents: IResponseDocs[]): any;
export declare function Response<T>(messagePath: string, options?: IResponseOptions<T>): any;
export declare function ResponsePagingType(type: ENUM_PAGINATION_TYPE): <TFunction extends Function, Y>(target: object | TFunction, propertyKey?: string | symbol, descriptor?: TypedPropertyDescriptor<Y>) => void;
export declare function ResponseExcel(options?: IResponseExcelOptions<void>): <TFunction extends Function, Y>(target: object | TFunction, propertyKey?: string | symbol, descriptor?: TypedPropertyDescriptor<Y>) => void;
export declare function ResponsePaging<T>(messagePath: string, options?: IResponsePagingOptions<T>): any;
export declare function ResponseTimeout(seconds: string): any;
